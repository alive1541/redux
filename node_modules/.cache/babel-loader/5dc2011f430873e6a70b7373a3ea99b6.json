{"ast":null,"code":"import { connect } from 'react-redux';\nimport { toggleTodo } from '../store/actions';\nimport TodoList from '../components/TodoList';\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case 'SHOW_COMPLETED':\n      return todos.filter(t => t.completed);\n\n    case 'SHOW_ACTIVE':\n      return todos.filter(t => !t.completed);\n\n    case 'SHOW_ALL':\n    default:\n      return todos;\n  }\n};\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n});\n\nexport default connect()(TodoList);","map":{"version":3,"sources":["/Users/didi/Desktop/fresh-man-learn/redux/test/src/containers/VisibleTodoList.js"],"names":["connect","toggleTodo","TodoList","getVisibleTodos","todos","filter","t","completed","mapStateToProps","state","visibilityFilter","mapDispatchToProps","dispatch","id"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,UAAQA,MAAR;AACE,SAAK,gBAAL;AACE,aAAOD,KAAK,CAACC,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,SAApB,CAAP;;AACF,SAAK,aAAL;AACE,aAAOH,KAAK,CAACC,MAAN,CAAaC,CAAC,IAAI,CAACA,CAAC,CAACC,SAArB,CAAP;;AACF,SAAK,UAAL;AACA;AACE,aAAOH,KAAP;AAPJ;AASD,CAVD;;AAYA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,KAAK,EAAED,eAAe,CAACM,KAAK,CAACL,KAAP,EAAcK,KAAK,CAACC,gBAApB;AADU,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCX,EAAAA,UAAU,EAAEY,EAAE,IAAID,QAAQ,CAACX,UAAU,CAACY,EAAD,CAAX;AADY,CAAL,CAAnC;;AAIA,eAAeb,OAAO,GAGpBE,QAHoB,CAAtB","sourcesContent":["import { connect } from 'react-redux'\nimport { toggleTodo } from '../store/actions'\nimport TodoList from '../components/TodoList'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case 'SHOW_COMPLETED':\n      return todos.filter(t => t.completed)\n    case 'SHOW_ACTIVE':\n      return todos.filter(t => !t.completed)\n    case 'SHOW_ALL':\n    default:\n      return todos\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n})\n\nexport default connect(\n  // mapStateToProps,\n  // mapDispatchToProps\n)(TodoList)"]},"metadata":{},"sourceType":"module"}